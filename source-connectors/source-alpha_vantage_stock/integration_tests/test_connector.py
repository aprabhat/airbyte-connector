import json
import pytest
from airbyte_cdk import AirbyteLogger
from airbyte_cdk.sources.declarative.declarative_source import DeclarativeSource
from airbyte_cdk.models import SyncMode


@pytest.fixture
def source():
    # Import your declarative source (autogenerated in your connector package)
    from source_declarative import SourceDeclarative
    return SourceDeclarative()


def load_config():
    with open("integration_tests/acceptance/config.json") as f:
        return json.load(f)


def test_check_connection(source):
    logger = AirbyteLogger()
    config = load_config()
    ok, error = source.check_connection(logger, config)
    assert ok, f"Connection failed: {error}"


def test_streams_discover(source):
    config = load_config()
    streams = source.streams(config)
    assert len(streams) > 0, "No streams discovered"


def test_read_records(source):
    config = load_config()
    streams = source.streams(config)
    found_records = False
    for stream in streams:
        records = list(stream.read_records(sync_mode=SyncMode.full_refresh))
        if records:
            found_records = True
            break
    assert found_records, "No records retrieved from any stream"